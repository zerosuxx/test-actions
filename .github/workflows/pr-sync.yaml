name: PrSync

on:
  pull_request:
    types:
      - opened
      - synchronize
      - closed

env:
  FOLDER_LIST: 'infra/dev,infra/staging,infra/prod'
  TOOLS: |
    terraform 1.10.3
    terragrunt 0.71.1

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.modified-files.outputs.matrix }}
      affected_folders_length: ${{ steps.modified-files.outputs.affected_folders_length }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: test
        run: echo '${{ toJSON(github) }}'
      - name: modified files
        id: modified-files
        shell: /usr/bin/bash -eo pipefail {0}
        run: |
          modified_files=$(curl -fsSL "${{ github.event.pull_request.diff_url }}" | grep "^diff --git" | awk '{print $3}')

          affected_folders=()
          for folder in $(echo ${FOLDER_LIST} | sed "s/,/ /g")
          do
            if echo "$modified_files" | grep -q "${folder}"; then
              affected_folders+=("$folder")
            fi
          done

          echo "matrix=$(jq -c -n '{folder: $ARGS.positional}' --args "${affected_folders[@]}")" | tee -a $GITHUB_OUTPUT
          echo "affected_folders_length=${#affected_folders[@]}" | tee -a $GITHUB_OUTPUT

  tf:
    needs: prepare
    runs-on: ubuntu-latest
    if: needs.prepare.outputs.affected_folders_length > 0 #&& contains(fromJSON('["opened", "synchronize"]'), github.event.action)
    strategy:
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - uses: jdx/mise-action@v2
        with:
          tool_versions: ${{ env.TOOLS }}

      - name: Load plan file(s)
        uses: actions/cache@v4
        with:
          path: /tmp/tfplan
          key: plan-${{ matrix.folder }}-${{ github.event.number }}-${{ github.run_id }}-${{ github.run_attempt }}
          restore-keys: |
            plan-${{ matrix.folder }}-${{ github.event.number }}
  
      - name: Run
        shell: /usr/bin/bash -eo pipefail {0}
        run: |
          action="plan"
          if [ "${{ github.event.action }}" == "closed" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            action="apply"
          fi

          terragrunt run-all "${action}" --terragrunt-out-dir /tmp/tfplan --terragrunt-working-dir "${{ matrix.folder }}"

