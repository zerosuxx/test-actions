name: CI

on: push

jobs:
  check-published-version:
    runs-on: ubuntu-latest
    outputs:
      packageVersion: ${{ steps.check-version.outputs.packageVersion }}
    steps:
      - name: Check version
        id: check-version
        env:
          NPM_PACKAGE: '@emartech/client-publish'
          TARGET_IMAGE: zerosuxx/emartech-client-publish
        run: |
          export VERSION=$(npm view $NPM_PACKAGE version)
          echo $VERSION
          dockerManifestResult=$(docker manifest inspect $TARGET_IMAGE:$VERSION)
          if [ "$dockerManifestResult" == "" ];
          then
            echo "::set-output name=packageVersion::$VERSION"
          fi
        
  job2:
    runs-on: ubuntu-latest
    if: needs.check-published-version.outputs.packageVersion != ''
    needs: check-published-version
    steps:
      - run: echo ${{needs.check-published-version.outputs.packageVersion}}

#   build:
#     runs-on: "ubuntu-latest" #self-hosted
#     env:
#       COMPOSE_DOCKER_CLI_BUILD: 1
#       DOCKER_BUILDKIT: 1
#     steps:
    #  - name: test
    #    run: id #env && git clone "https://${GITHUB_REPOSITORY_OWNER}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git" && ls -al test-actions 
    #- uses: actions/checkout@v2
    #- name: build
    # if: startsWith(github.ref, 'refs/tags')
    #  run: docker build --build-arg testArg=${GITHUB_REF##*/} -t test .
    #- name: run
    #  run: docker ps && curl 12.1.1.1:2376
    #- name: Login To DockerHub Registry
    #  run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

